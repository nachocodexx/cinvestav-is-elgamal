import cats.implicits._
import mx.cinvestav.ElGamalMain.{decrypt, encrypt, generatePublicKeys, generateSecretKey, log}
import mx.cinvestav.ProgramState
import mx.cinvestav.domain.Computer
import org.scalatest.funsuite.AnyFunSuite

import java.math.BigInteger

class ElGamalSpec extends AnyFunSuite{
  test("Encryption and decryption"){
    val M = "Hola, Bob"

    val app = generateSecretKey.flatTap(log) >> generatePublicKeys.flatTap(log) >> encrypt(M).flatMap(decrypt)

    val g= new BigInteger("25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784406918290641249515082189298559149176184502808489120072844992687392807287776735971418347270261896375014971824691165077613379859095700097330459748808428401797429100642458691817195118746121515172654632282216869987549182422433637259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133844143603833904414952634432190114657544454178424020924616515723350778707749817125772467962926386356373289912154831438167899885040445364023527381951378636564391212010397122822120720357")
    val q = new BigInteger("28000683183178967691045327604549384273200737889408995067805870891607724272230730502935636255532870616923025398319616632616092747176572652764654213686197067978724897059080696115029373038734138776497829382209184353226737118067832131611204962781402651965177616959574821618486012482587117231822248731517319319566924904448200435653538174582490406853948962841924553170338450032277400949816544697301833261918343852251257502237396393086633583807821908438408392306669481101256146839747375312263603398130110605035799543160744850445683794785163914245886097291108437856051664713997308071095372852050222033510254270476986339211627")
    val c1    = Computer("Alice")
    val c2    = Computer("Bob")
    val state = ProgramState(c1,c2,q,g)
    val res = new String(app.runA(state).value)
//    println(res)
//    assert(true)
    assert(res.equals(M))
//    assert(res.sameElements(M.getBytes))
//    assert(res.deep(M.getBytes))
  }
}
